@model IEnumerable<SocialLibraryMVC.Models.Book>

@{
    ViewData["Title"] = "Index";
}

<h1>Index</h1>

<p>
    <a asp-action="Create">Create New</a>
</p>
<form asp-action="Index" method="get">
    <div class="form-actions no-color">
        <p>
            Find by name: <input type="text" name="SearchString" value="@ViewData["CurrentFilter"]" />
            <input type="submit" value = "Search" class="btn btn-default"/> |
            <a asp-action="Index">Back to Full List</a>
        </p>
    </div>
</form>
<table class="table">
    <thead>
        <tr>
            <th>
                @Html.DisplayNameFor(model => model.Cover)
            </th>
            <th>
                @Html.DisplayNameFor(model => model.Title)
            </th>
            <th>
                @Html.DisplayNameFor(model => model.Description)
            </th>
            <th>
                @Html.DisplayNameFor(model => model.Authors)
            </th>
            <th>
                @Html.DisplayNameFor(model => model.Genre)
            </th>
            <th>
                @Html.DisplayNameFor(model => model.PublishYear)
            </th>
            <th>
                @Html.DisplayNameFor(model => model.ISBN_10)
            </th>
            <th>
                @Html.DisplayNameFor(model => model.ISBN_13)
            </th>
            <th>
                <h5>Rating</h5>
            </th>
            <th></th>
        </tr>
    </thead>
    <tbody>
@foreach (var item in Model) {
        <tr>
            <td>
                    @* If the book has an image attached, take the Cover byte array and convert it into an image. If there is no image, keep the space, but don't display anything*@
                    @if (item.Cover != null)
                    {
                        <img id="cover" style="width:250px;height:250px; object-fit:cover" src="data:image/*;base64,@(Convert.ToBase64String(item.Cover))">
                    }
                    else
                    {
                        <img id="cover" style="width:250px;height:250px; object-fit:cover" src="">
                    }
            </td>
            <td>
                @Html.DisplayFor(modelItem => item.Title)
            </td>
            <td>
                @Html.DisplayFor(modelItem => item.Description)
            </td>
            <td>
                @Html.DisplayFor(modelItem => item.Authors.Name)
            </td>
            <td>
                @Html.DisplayFor(modelItem => item.Genre)
            </td>
            <td>
                @Html.DisplayFor(modelItem => item.PublishYear)
            </td>
            <td>
                @Html.DisplayFor(modelItem => item.ISBN_10)
            </td>
            <td>
                @Html.DisplayFor(modelItem => item.ISBN_13)
            </td>
            <td>
                @* The view data comes from the index action and takes the average rating and the number rating for each book *@
                <p>@ViewData["AverageRating" + item.ISBN_13] (@ViewData["CountRating"+item.ISBN_13])</p>
            </td>
            <td>
                <a asp-action="Details" asp-route-id="@item.ISBN_13" class="btn btn-primary">Details</a>
                <a asp-action="Edit" asp-route-id="@item.ISBN_13" class="btn btn-primary">Edit</a>
                <a asp-action="Delete" asp-route-id="@item.ISBN_13" class="btn btn-primary">Delete</a>
                @* This should link to the Review controller to create a new review for this particular book and user. If the review already exists, then redirect to the Edit action *@
                <a asp-controller="Reviews" asp-action="Create" asp-route-Isbn_13="@item.ISBN_13" class="btn btn-primary">Review</a>
            </td>
        </tr>
}
    </tbody>
</table>
